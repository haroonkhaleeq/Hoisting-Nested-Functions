{"8":[13,6,13,22],"9":[7,10,7,16],"10":[13,6,13,12],"16":[13,6,13,22],"17":[7,10,7,22],"18":[13,16,13,22],"25":[7,10,7,22],"26":[16,21,16,26],"33":[7,10,7,22],"34":[16,41,16,46],"41":[8,2,8,12],"42":[16,10,16,47],"49":[8,13,8,14],"57":[8,2,8,15],"65":[8,2,8,16],"73":[6,1,10,2],"81":[6,1,10,2],"89":[6,1,10,2],"97":[6,1,10,2],"105":[13,6,13,7],"113":[13,11,13,12],"121":[13,16,13,17],"129":[13,21,13,22],"137":[14,10,14,11],"145":[14,10,14,11],"153":[14,3,14,12],"161":[16,10,16,20],"169":[16,21,16,22],"177":[16,25,16,26],"185":[16,10,16,27],"193":[16,30,16,40],"201":[16,41,16,42],"209":[16,45,16,46],"217":[16,30,16,47],"225":[16,10,16,47],"233":[16,3,16,48],"241":[12,1,18,2],"249":[12,1,18,2],"257":[12,1,18,2],"265":[20,1,20,13],"273":[20,21,20,22],"281":[20,14,20,23],"289":[20,1,20,24],"297":[20,1,20,25],"305":[1,1,21,1],"313":[6,1,10,2],"321":[1,1,21,1],"329":[12,1,18,2],"337":[1,1,21,1],"345":[6,1,10,2],"353":[6,1,10,2],"361":[13,2,16,48],"369":[12,1,18,2],"377":[12,1,18,2],"385":[1,1,21,1],"393":[1,1,21,1],"nBranches":4,"originalCodeFileName":"/home/shooter25/Documents/Haroon/Masters DSS/4th Semester/Program Testing and Analysis/Project/Hoisting-Nested-Functions/tests/test_recursive_obj.js","instrumentedCodeFileName":"/home/shooter25/Documents/Haroon/Masters DSS/4th Semester/Program Testing and Analysis/Project/Hoisting-Nested-Functions/tests/test_recursive_obj_jalangi_.js","code":"/* \n* Test case for the use of objects with single properties.\n* Output of the function is of type Number\n*/\n\nfunction fibonacciObj(object) {\n\tvar n = object.value;\n\tfibonacci1(n);\n\n}\n\nfunction fibonacci1(n) {\n\tif (n == 0 || n == 1)\n\t\treturn n;\n\telse\n\t\treturn fibonacci1(n - 1) + fibonacci1(n - 2);\n\n}\n\nfibonacciObj({value:4});\n"}